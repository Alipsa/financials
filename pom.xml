<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <!-- Must use the org.renjin.cran groupname to make library(financials) 
  work like GNU-R -->
  <groupId>org.renjin.cran</groupId>
  <artifactId>financials</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <!-- general information about your package -->
  <name>financials</name>
  <description>Financial functions</description>

  <properties>
    <renjin.version>3.5-beta76</renjin.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <url>https://github.com/Alipsa/financials</url>
  <licenses>
    <license>
      <name>MIT</name>
      <url>https://github.com/Alipsa/financials/blob/master/LICENSE</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Per Nyfelt</name>
      <email>per.nyfelt@alipsa.se</email>
      <organization>Alipsa HB</organization>
      <organizationUrl>http://www.alipsa.se</organizationUrl>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:https://github.com/Alipsa/financials.git</connection>
    <developerConnection>scm:git:https://github.com/Alipsa/financials.git</developerConnection>
    <url>https://github.com/Alipsa/financials/tree/master</url>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.renjin</groupId>
      <artifactId>renjin-script-engine</artifactId>
      <version>${renjin.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.27</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.27</version>
      <scope>provided</scope>
    </dependency>

    <!-- the hamcrest package is only required if you use it for unit tests -->
    <dependency>
      <groupId>org.renjin</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${renjin.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.renjin.cran</groupId>
      <artifactId>testthat</artifactId>
      <version>2.1.1-b2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>bedatadriven</id>
      <name>bedatadriven public repo</name>
      <url>https://nexus.bedatadriven.com/content/groups/public/</url>
    </repository>
    <repository>
      <id>mavencentral</id>
      <name>central</name>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>bedatadriven</id>
      <name>bedatadriven public repo</name>
      <url>https://nexus.bedatadriven.com/content/groups/public/</url>
    </pluginRepository>
    <!--pluginRepository>
      <id>maven-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <layout>default</layout>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository-->
  </pluginRepositories>

  <build>
    <testSourceDirectory>${project.basedir}/renjin/test/java</testSourceDirectory>
    <testResources>
      <testResource>
        <directory>${project.basedir}/renjin/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.renjin</groupId>
        <artifactId>renjin-maven-plugin</artifactId>
        <version>${renjin.version}</version>
        <executions>
          <execution>
            <id>build</id>
            <goals>
              <goal>namespace-compile</goal>
            </goals>
            <phase>process-classes</phase>
            <configuration>
              <sourceDirectory>${basedir}/R</sourceDirectory>
              <dataDirectory>${basedir}/data</dataDirectory>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.27</version>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.27</version>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.27</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>se.alipsa</groupId>
        <artifactId>renjin-test-maven-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
          <execution>
            <phase>test</phase>
            <id>testthat</id>
            <goals>
              <goal>testR</goal>
            </goals>
            <configuration>
              <testFailureIgnore>true</testFailureIgnore>
              <testSourceDirectory>${project.basedir}/tests</testSourceDirectory>
            </configuration>
          </execution>
          <execution>
            <id>hamcrest</id>
            <phase>test</phase>
            <goals>
              <goal>testR</goal>
            </goals>
            <configuration>
              <testFailureIgnore>true</testFailureIgnore>
              <testSourceDirectory>${project.basedir}/renjin/test/R</testSourceDirectory>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.renjin</groupId>
            <artifactId>renjin-script-engine</artifactId>
            <version>${renjin.version}</version>
            <exclusions>
              <exclusion>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.30</version>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.30</version>
          </dependency>         
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.0.0-M4</version>
        <configuration>
          <title>R Tests Report</title>
          <outputName>test-report</outputName>
          <reportsDirectories>${project.build.directory}/renjin-test-reports</reportsDirectories>
          <linkXRef>false</linkXRef>
        </configuration>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>report-only</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- the site plugin will create formatting stuff e.g. css etc. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.9.0</version>
        <configuration>
          <generateReports>false</generateReports>
        </configuration>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>site</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <!-- TODO: uncomment this and add the real url if you have a repository to deploy to -->
  <!--distributionManagement>
    <snapshotRepository>
      <id>nexus-snapshots</id>
      <url>http://some.server:8081/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement-->
</project>